version: '3.7'

services:
  api:
    build:
      context: ../../
      dockerfile: ./src/CleanCQRS.API/Dockerfile
    env_file:
      - ../../deployment/.env
    environment:
      - VIRTUAL_HOST=api.CleanCQRS
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=api.CleanCQRS
    expose:
      - 80
    networks:
      - default
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
  
  dashboard:
    build:
      context: ../../
      dockerfile: ./src/CleanCQRS.Dashboard/Dockerfile
    env_file:
      - ../../deployment/.env
    environment:
      - VIRTUAL_HOST=dashboard.CleanCQRS
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=dashboard.CleanCQRS
    expose:
      - 80
    networks:
      - default
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  frontend:
    build:
      context: ../../
      dockerfile: ./src/CleanCQRS.Web/Dockerfile
    env_file:
      - ../../deployment/.env
    environment:
      - VIRTUAL_HOST=CleanCQRS
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=CleanCQRS
    expose:
      - 80
    networks:
      - default
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped



networks:
  default:
    name: CleanCQRS